######################
# To do?: numlockx off
######################
#############################################################################
# Note: exec commands will not run when restarting i3. If you need a command
# to run every time i3 restarts, use the exec_always keyword.
#############################################################################

# Wallpaper. Daemonise to listen for RandR events i.e. to redraw wallpapers
# when output size changes.
exec_always --no-startup-id xwallpaper --daemon --zoom $HOME/Pictures/Wallpaper/showa-building-cropped.png

# Compositor. See keybindings for starting or stopping Picom on the fly.
exec --no-startup-id picom

# Start Fcitx5 to handle Japanese input
exec --no-startup-id fcitx5

# Start notification daemon
exec --no-startup-id dunst

# Ensure preferred numlock state
exec --no-startup-id numlockx on

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# Start Conky
#exec --no-startup-id conky

# xss-lock grabs a logind suspend inhibit lock and will invoke a screen locker
# before suspend.
#exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork
exec --no-startup-id xss-lock --transfer-sleep-lock -- ~/.lockscreen/screenlock-debug.sh

# Lock the screen after a set period of time. Lifted from i3-themer.
#exec --no-startup-id xautolock -time 10 -locker 'i3lock -p'

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop-independent system tray GUI for it.
#exec --no-startup-id nm-applet

# Start i3bar to display a workspace bar (or bars)
bar {
	# Set appearance and behaviour here. Font is inherited from appearance.conf
	# unless explicitly set below.
	position bottom
	tray_output none

	# The output of i3status has it's own config file (question: where?). 
        # Alternatively, use i3blocks (~/.i3blocks
	#status_command i3status
	status_command i3blocks
}
